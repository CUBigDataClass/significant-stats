{"version":3,"sources":["logo.svg","components/CountryBox.js","components/StatesBox.js","components/StartYearBox.js","components/EndYearBox.js","components/CountrySelect.js","components/TemperatureStripes.js","components/CustomizedSlider.js","components/OutlinedCard.js","App.js","reportWebVitals.js","index.js"],"names":["CountryBox","props","Autocomplete","id","options","countries","style","width","renderInput","params","TextField","label","variant","onChange","event","value","onSubmit","preventDefault","StateBox","states","sort","YearBox","years","EndYearBox","makeStyles","option","fontSize","marginRight","stripeCounter","TemperatureStripes","temperatures","length","className","map","tmp","temp","numOfEntries","hue","stripeWidth","console","log","widthPercent","moveLeft","leftPercent","left","backgroundColor","getStripe","useStyles","root","marks","valuetext","CustomSlider","classes","React","useState","setValue","Typography","gutterBottom","Slider","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","minWidth","bullet","display","margin","transform","title","textAlign","pos","marginBottom","OutlinedCard","Card","CardContent","component","App","setGetMessage","useEffect","axios","get","then","response","catch","error","stateName","setStateName","country","setCountry","startYear","setStartYear","endYear","setEndYear","stateTempData","setStateTempData","countryTempData","setCountryTempData","countryYearlyTempData","setCountryYearlyTempData","errorMessage","setErrorMessage","showCountryForm","setShowCountryForm","showStateForm","setShowStateForm","a","url","fetch","json","ok","message","statusText","Promise","reject","result","toString","year_url","year_response","year_json","min_year","year","parseInt","alert","b","handleStartYearChange","handleEndYearChange","curYear","curTemp","yearlyTemps","forEach","item","average_temp","avgTemp","push","position","top","Button","color","onClick","evt","fetchDataState","type","fetchDataCountry","row","state","month","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1256e12a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function CountryBox(props) {\r\n\r\n  function handleCountryChange(event,value) {\r\n    // Here, we invoke the callback with the new value\r\n    props.onChange(value);\r\n}\r\n\r\n  function boxSubmitHandler(event){\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"country-box\"\r\n      options={countries}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Select Country\" variant=\"outlined\" />}\r\n      onChange={handleCountryChange}\r\n      onSubmit={boxSubmitHandler}\r\n    />\r\n  );\r\n}\r\n\r\nconst countries = ['Bangladesh','Malaysia','Yemen','Christmas Island','Lesotho','Ecuador','Mauritius',\r\n'Peru','South America',\"Côte D'Ivoire\",\"Tunisia\",\"Anguilla\",\"Spain\",'Slovenia',\"Senegal\",'Austria',\r\n'Kingman Reef','Gaza Strip','Turks And Caicas Islands','North Korea','New Caledonia','Somalia',\r\n'British Virgin Islands','Seychelles','Libya','Israel','Europe','Andorra','Jordan','Sint Maarten',\r\n'Ukraine','Uruguay','Svalbard And Jan Mayen','Netherlands (Europe)','Saudi Arabia','Kenya','Sierra Leone',\r\n'Bhutan','Serbia','Djibouti','Egypt','Nicaragua','Aruba','Paraguay','Iran','French Polynesia','Denmark','Iraq',\r\n'Romania','Guinea Bissau','Guatemala','El Salvador','Eritrea','Cameroon','Comoros','Guadeloupe','Liberia','Cyprus',\r\n\"Hong Kong\",'Morocco','Mongolia','Portugal','Curaçao','Swaziland','Lebanon','Bahamas','United States','Madagascar',\r\n'San Marino','Guyana','Bahrain','Denmark (Europe)','Saint Martin','Mali','Togo','Sri Lanka','Timor Leste','Bolivia',\r\n'Canada','Antigua And Barbuda','Vietnam','Niger','Bonaire, Saint Eustatius And Saba','Macedonia','Tanzania','Oceania',\r\n'Croatia','Liechtenstein','Africa','Moldova','Equatorial Guinea','Brazil','Martinique','Sudan','Georgia','Mauritania',\r\n'Congo (Democratic Republic Of The)','Philippines','Ghana','Åland','Colombia','Turkmenistan','Ireland','Asia','Belgium',\r\n'Samoa','Iceland','Sweden','Zambia','Guam','Dominican Republic','United Kingdom','Norway','United Kingdom (Europe)',\r\n'Chile','Burkina Faso','Palau','Burma','Sao Tome And Principe','American Samoa','China','Kyrgyzstan','Malta',\r\n'Greece','Saint Vincent And The Grenadines','Reunion','Saint Barthélemy','Costa Rica','Russia','Switzerland','Puerto Rico',\r\n'Bulgaria','South Africa','Fiji','Syria','Uzbekistan','Venezuela','Armenia','Jersey','Greenland','Isle Of Man',\r\n'Falkland Islands (Islas Malvinas)','Barbados','Kazakhstan','Papua New Guinea','Gambia','Cayman Islands',\r\n'Palestina','Baker Island','South Georgia And The South Sandwich Isla','Guernsey','India','Bosnia And Herzegovina',\r\n'Cape Verde','Thailand','Haiti','Estonia','Kuwait','Namibia','Northern Mariana Islands','Czech Republic',\r\n'Faroe Islands','Palmyra Atoll','Heard Island And Mcdonald Islands','French Guiana','Dominica','Nepal',\r\n'Taiwan','Algeria','Uganda','Laos','France','Trinidad And Tobago','Botswana','Finland','Honduras','Monaco',\r\n'Guinea','France (Europe)','Tajikistan','Turkey','Angola','Niue','Suriname','Cuba','Jamaica','Montserrat',\r\n'Indonesia','Netherlands','Mayotte',\"Lithuania\",'Luxembourg','Saint Kitts And Nevis','Mexico','Benin',\r\n'Burundi','Germany','South Korea','Virgin Islands','Federated States Of Micronesia','French Southern And Antarctic Lands',\r\n'Pakistan','Congo','Azerbaijan','Central African Republic','United Arab Emirates','Chad','Saint Lucia','Latvia',\r\n'Western Sahara','Grenada','Qatar','Poland','Kiribati','Rwanda','Tonga','New Zealand','Solomon Islands','Japan',\r\n'Belize','Montenegro','Slovakia','Mozambique','Albania','North America','Afghanistan','Zimbabwe','Belarus',\r\n'Saint Pierre And Miquelon','Macau','Argentina','Nigeria','Ethiopia','Gabon','Australia','Malawi',\r\n'Panama','Italy','Hungary','Singapore','Cambodia','Oman'\r\n\r\n];\r\ncountries.sort()\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function StateBox(props) {\r\n\r\n  function handleStateChange(event,value) {\r\n    // Here, we invoke the callback with the new value\r\n    props.onChange(value);\r\n}\r\n\r\nfunction boxSubmitHandler(event){\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"state-box\"\r\n      options={states}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Select State\" variant=\"outlined\" />}\r\n      onChange={handleStateChange}\r\n      onSubmit={boxSubmitHandler}\r\n    />\r\n  );\r\n}\r\n\r\nconst states = ['Indiana','Florida','Delaware','Rhode Island','Connecticut','Pennsylvania','Oklahoma','New York',\r\n'Ohio','New Jersey','Nevada','Wyoming','Nebraska','West Virginia','North Dakota','Kansas','South Carolina',\r\n'North Carolina','Georgia','Alabama','Arizona','Virginia','Maine','New Hampshire','Illinois','Montana',\r\n'Massachusetts','South Dakota','Mississippi','Missouri','New Mexico','California','Michigan','Wisconsin',\r\n'Vermont','Oregon','Louisiana','Washington','Idaho','Utah','Colorado','Minnesota','Texas','Arkansas',\r\n'Kentucky','Maryland','Tennessee','Iowa'\r\n\r\n];\r\nstates.sort()\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function YearBox(props) {\r\n\r\n  function handleStartYearChange(event,value) {\r\n    // Here, we invoke the callback with the new value\r\n    props.onChange(value);\r\n}\r\n\r\nfunction boxSubmitHandler(event){\r\n  event.preventDefault();\r\n}\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"start-year-box\"\r\n      options={years}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Select Starting Year\" variant=\"outlined\" />}\r\n      onChange={handleStartYearChange}\r\n      onSubmit={boxSubmitHandler}\r\n    />\r\n  );\r\n}\r\n\r\nconst years = ['1796','1798','1799','1800','1801','1802','1803','1804','1805','1806','1807','1813','1814','1815',\r\n'1816','1817','1818','1819','1820','1821','1822','1823','1824','1825','1826','1827','1828','1829','1830','1831',\r\n'1832','1833','1834','1835','1836','1837','1838','1839','1840','1841','1842','1843','1844','1845','1846','1847',\r\n'1848','1849','1850','1851','1852','1853','1854','1855','1856','1857','1858','1859','1860','1861','1863','1864',\r\n'1865','1866','1867','1868','1869','1870','1871','1872','1873','1874','1875','1876','1877','1878','1879','1880',\r\n'1881','1882','1883','1884','1885','1886','1887','1888','1889','1890','1891','1892','1893','1894','1895','1896',\r\n'1897','1898','1899','1900','1901','1902','1903','1904','1905','1906','1907','1908','1909','1910','1911','1912',\r\n'1913','1914','1915','1916','1917','1918','1919','1920','1921','1922','1923','1924','1925','1926','1927','1928',\r\n'1929','1930','1931','1932','1933','1934','1935','1936','1937','1938','1939','1940','1941','1942','1943','1944',\r\n'1945','1946','1947','1948','1949','1950','1951','1952','1953','1954','1955','1956','1957','1958','1959','1960',\r\n'1961','1962','1963','1964','1965','1966','1967','1968','1969','1970','1971','1972','1973','1974','1975','1976',\r\n'1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988','1989','1990','1991','1992',\r\n'1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008',\r\n'2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019'\r\n];\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function EndYearBox(props) {\r\n\r\n  function handleEndYearChange(event,value) {\r\n    // Here, we invoke the callback with the new value\r\n    props.onChange(value);\r\n  }\r\n\r\n  function boxSubmitHandler(event){\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"end-year-box\"\r\n      options={years}\r\n      style={{ width: 300 }}\r\n      renderInput={(params) => <TextField {...params} label=\"Select Ending Year\" variant=\"outlined\" />}\r\n      onChange={handleEndYearChange}\r\n      onSubmit={boxSubmitHandler}\r\n    />\r\n  );\r\n}\r\n\r\nconst years = ['1796','1798','1799','1800','1801','1802','1803','1804','1805','1806','1807','1813','1814','1815',\r\n'1816','1817','1818','1819','1820','1821','1822','1823','1824','1825','1826','1827','1828','1829','1830','1831',\r\n'1832','1833','1834','1835','1836','1837','1838','1839','1840','1841','1842','1843','1844','1845','1846','1847',\r\n'1848','1849','1850','1851','1852','1853','1854','1855','1856','1857','1858','1859','1860','1861','1863','1864',\r\n'1865','1866','1867','1868','1869','1870','1871','1872','1873','1874','1875','1876','1877','1878','1879','1880',\r\n'1881','1882','1883','1884','1885','1886','1887','1888','1889','1890','1891','1892','1893','1894','1895','1896',\r\n'1897','1898','1899','1900','1901','1902','1903','1904','1905','1906','1907','1908','1909','1910','1911','1912',\r\n'1913','1914','1915','1916','1917','1918','1919','1920','1921','1922','1923','1924','1925','1926','1927','1928',\r\n'1929','1930','1931','1932','1933','1934','1935','1936','1937','1938','1939','1940','1941','1942','1943','1944',\r\n'1945','1946','1947','1948','1949','1950','1951','1952','1953','1954','1955','1956','1957','1958','1959','1960',\r\n'1961','1962','1963','1964','1965','1966','1967','1968','1969','1970','1971','1972','1973','1974','1975','1976',\r\n'1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988','1989','1990','1991','1992',\r\n'1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008',\r\n'2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019'\r\n];\r\n","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// ISO 3166-1 alpha-2\r\n// ⚠️ No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode\r\n        .toUpperCase()\r\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n    : isoCode;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 18,\r\n    },\r\n  },\r\n});\r\n\r\nexport default function CountrySelect() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"country-select-demo\"\r\n      style={{ width: 500 }}\r\n      options={countries}\r\n      classes={{\r\n        option: classes.option,\r\n      }}\r\n      autoHighlight\r\n      getOptionLabel={(option) => option.label}\r\n      renderOption={(option) => (\r\n        <React.Fragment>\r\n          <span>{countryToFlag(option.code)}</span>\r\n          {option.label} ({option.code}) +{option.phone}\r\n        </React.Fragment>\r\n      )}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Choose a country\"\r\n          variant=\"outlined\"\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\r\nconst countries = [\r\n  { code: 'AD', label: 'Andorra', phone: '376' },\r\n  { code: 'AE', label: 'United Arab Emirates', phone: '971' },\r\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\r\n  { code: 'AG', label: 'Antigua and Barbuda', phone: '1-268' },\r\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\r\n  { code: 'AL', label: 'Albania', phone: '355' },\r\n  { code: 'AM', label: 'Armenia', phone: '374' },\r\n  { code: 'AO', label: 'Angola', phone: '244' },\r\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\r\n  { code: 'AR', label: 'Argentina', phone: '54' },\r\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\r\n  { code: 'AT', label: 'Austria', phone: '43' },\r\n  { code: 'AU', label: 'Australia', phone: '61', suggested: true },\r\n  { code: 'AW', label: 'Aruba', phone: '297' },\r\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\r\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\r\n  { code: 'BA', label: 'Bosnia and Herzegovina', phone: '387' },\r\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\r\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\r\n  { code: 'BE', label: 'Belgium', phone: '32' },\r\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\r\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\r\n  { code: 'BH', label: 'Bahrain', phone: '973' },\r\n  { code: 'BI', label: 'Burundi', phone: '257' },\r\n  { code: 'BJ', label: 'Benin', phone: '229' },\r\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\r\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\r\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\r\n  { code: 'BO', label: 'Bolivia', phone: '591' },\r\n  { code: 'BR', label: 'Brazil', phone: '55' },\r\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\r\n  { code: 'BT', label: 'Bhutan', phone: '975' },\r\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\r\n  { code: 'BW', label: 'Botswana', phone: '267' },\r\n  { code: 'BY', label: 'Belarus', phone: '375' },\r\n  { code: 'BZ', label: 'Belize', phone: '501' },\r\n  { code: 'CA', label: 'Canada', phone: '1', suggested: true },\r\n  { code: 'CC', label: 'Cocos (Keeling) Islands', phone: '61' },\r\n  { code: 'CD', label: 'Congo, Democratic Republic of the', phone: '243' },\r\n  { code: 'CF', label: 'Central African Republic', phone: '236' },\r\n  { code: 'CG', label: 'Congo, Republic of the', phone: '242' },\r\n  { code: 'CH', label: 'Switzerland', phone: '41' },\r\n  { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\r\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\r\n  { code: 'CL', label: 'Chile', phone: '56' },\r\n  { code: 'CM', label: 'Cameroon', phone: '237' },\r\n  { code: 'CN', label: 'China', phone: '86' },\r\n  { code: 'CO', label: 'Colombia', phone: '57' },\r\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\r\n  { code: 'CU', label: 'Cuba', phone: '53' },\r\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\r\n  { code: 'CW', label: 'Curacao', phone: '599' },\r\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\r\n  { code: 'CY', label: 'Cyprus', phone: '357' },\r\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\r\n  { code: 'DE', label: 'Germany', phone: '49', suggested: true },\r\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\r\n  { code: 'DK', label: 'Denmark', phone: '45' },\r\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\r\n  { code: 'DO', label: 'Dominican Republic', phone: '1-809' },\r\n  { code: 'DZ', label: 'Algeria', phone: '213' },\r\n  { code: 'EC', label: 'Ecuador', phone: '593' },\r\n  { code: 'EE', label: 'Estonia', phone: '372' },\r\n  { code: 'EG', label: 'Egypt', phone: '20' },\r\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\r\n  { code: 'ER', label: 'Eritrea', phone: '291' },\r\n  { code: 'ES', label: 'Spain', phone: '34' },\r\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\r\n  { code: 'FI', label: 'Finland', phone: '358' },\r\n  { code: 'FJ', label: 'Fiji', phone: '679' },\r\n  { code: 'FK', label: 'Falkland Islands (Malvinas)', phone: '500' },\r\n  { code: 'FM', label: 'Micronesia, Federated States of', phone: '691' },\r\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\r\n  { code: 'FR', label: 'France', phone: '33', suggested: true },\r\n  { code: 'GA', label: 'Gabon', phone: '241' },\r\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\r\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\r\n  { code: 'GE', label: 'Georgia', phone: '995' },\r\n  { code: 'GF', label: 'French Guiana', phone: '594' },\r\n  { code: 'GG', label: 'Guernsey', phone: '44' },\r\n  { code: 'GH', label: 'Ghana', phone: '233' },\r\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\r\n  { code: 'GL', label: 'Greenland', phone: '299' },\r\n  { code: 'GM', label: 'Gambia', phone: '220' },\r\n  { code: 'GN', label: 'Guinea', phone: '224' },\r\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\r\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\r\n  { code: 'GR', label: 'Greece', phone: '30' },\r\n  { code: 'GS', label: 'South Georgia and the South Sandwich Islands', phone: '500' },\r\n  { code: 'GT', label: 'Guatemala', phone: '502' },\r\n  { code: 'GU', label: 'Guam', phone: '1-671' },\r\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\r\n  { code: 'GY', label: 'Guyana', phone: '592' },\r\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\r\n  { code: 'HM', label: 'Heard Island and McDonald Islands', phone: '672' },\r\n  { code: 'HN', label: 'Honduras', phone: '504' },\r\n  { code: 'HR', label: 'Croatia', phone: '385' },\r\n  { code: 'HT', label: 'Haiti', phone: '509' },\r\n  { code: 'HU', label: 'Hungary', phone: '36' },\r\n  { code: 'ID', label: 'Indonesia', phone: '62' },\r\n  { code: 'IE', label: 'Ireland', phone: '353' },\r\n  { code: 'IL', label: 'Israel', phone: '972' },\r\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\r\n  { code: 'IN', label: 'India', phone: '91' },\r\n  { code: 'IO', label: 'British Indian Ocean Territory', phone: '246' },\r\n  { code: 'IQ', label: 'Iraq', phone: '964' },\r\n  { code: 'IR', label: 'Iran, Islamic Republic of', phone: '98' },\r\n  { code: 'IS', label: 'Iceland', phone: '354' },\r\n  { code: 'IT', label: 'Italy', phone: '39' },\r\n  { code: 'JE', label: 'Jersey', phone: '44' },\r\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\r\n  { code: 'JO', label: 'Jordan', phone: '962' },\r\n  { code: 'JP', label: 'Japan', phone: '81', suggested: true },\r\n  { code: 'KE', label: 'Kenya', phone: '254' },\r\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\r\n  { code: 'KH', label: 'Cambodia', phone: '855' },\r\n  { code: 'KI', label: 'Kiribati', phone: '686' },\r\n  { code: 'KM', label: 'Comoros', phone: '269' },\r\n  { code: 'KN', label: 'Saint Kitts and Nevis', phone: '1-869' },\r\n  { code: 'KP', label: \"Korea, Democratic People's Republic of\", phone: '850' },\r\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\r\n  { code: 'KW', label: 'Kuwait', phone: '965' },\r\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\r\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\r\n  { code: 'LA', label: \"Lao People's Democratic Republic\", phone: '856' },\r\n  { code: 'LB', label: 'Lebanon', phone: '961' },\r\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\r\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\r\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\r\n  { code: 'LR', label: 'Liberia', phone: '231' },\r\n  { code: 'LS', label: 'Lesotho', phone: '266' },\r\n  { code: 'LT', label: 'Lithuania', phone: '370' },\r\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\r\n  { code: 'LV', label: 'Latvia', phone: '371' },\r\n  { code: 'LY', label: 'Libya', phone: '218' },\r\n  { code: 'MA', label: 'Morocco', phone: '212' },\r\n  { code: 'MC', label: 'Monaco', phone: '377' },\r\n  { code: 'MD', label: 'Moldova, Republic of', phone: '373' },\r\n  { code: 'ME', label: 'Montenegro', phone: '382' },\r\n  { code: 'MF', label: 'Saint Martin (French part)', phone: '590' },\r\n  { code: 'MG', label: 'Madagascar', phone: '261' },\r\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\r\n  { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of', phone: '389' },\r\n  { code: 'ML', label: 'Mali', phone: '223' },\r\n  { code: 'MM', label: 'Myanmar', phone: '95' },\r\n  { code: 'MN', label: 'Mongolia', phone: '976' },\r\n  { code: 'MO', label: 'Macao', phone: '853' },\r\n  { code: 'MP', label: 'Northern Mariana Islands', phone: '1-670' },\r\n  { code: 'MQ', label: 'Martinique', phone: '596' },\r\n  { code: 'MR', label: 'Mauritania', phone: '222' },\r\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\r\n  { code: 'MT', label: 'Malta', phone: '356' },\r\n  { code: 'MU', label: 'Mauritius', phone: '230' },\r\n  { code: 'MV', label: 'Maldives', phone: '960' },\r\n  { code: 'MW', label: 'Malawi', phone: '265' },\r\n  { code: 'MX', label: 'Mexico', phone: '52' },\r\n  { code: 'MY', label: 'Malaysia', phone: '60' },\r\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\r\n  { code: 'NA', label: 'Namibia', phone: '264' },\r\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\r\n  { code: 'NE', label: 'Niger', phone: '227' },\r\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\r\n  { code: 'NG', label: 'Nigeria', phone: '234' },\r\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\r\n  { code: 'NL', label: 'Netherlands', phone: '31' },\r\n  { code: 'NO', label: 'Norway', phone: '47' },\r\n  { code: 'NP', label: 'Nepal', phone: '977' },\r\n  { code: 'NR', label: 'Nauru', phone: '674' },\r\n  { code: 'NU', label: 'Niue', phone: '683' },\r\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\r\n  { code: 'OM', label: 'Oman', phone: '968' },\r\n  { code: 'PA', label: 'Panama', phone: '507' },\r\n  { code: 'PE', label: 'Peru', phone: '51' },\r\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\r\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\r\n  { code: 'PH', label: 'Philippines', phone: '63' },\r\n  { code: 'PK', label: 'Pakistan', phone: '92' },\r\n  { code: 'PL', label: 'Poland', phone: '48' },\r\n  { code: 'PM', label: 'Saint Pierre and Miquelon', phone: '508' },\r\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\r\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\r\n  { code: 'PS', label: 'Palestine, State of', phone: '970' },\r\n  { code: 'PT', label: 'Portugal', phone: '351' },\r\n  { code: 'PW', label: 'Palau', phone: '680' },\r\n  { code: 'PY', label: 'Paraguay', phone: '595' },\r\n  { code: 'QA', label: 'Qatar', phone: '974' },\r\n  { code: 'RE', label: 'Reunion', phone: '262' },\r\n  { code: 'RO', label: 'Romania', phone: '40' },\r\n  { code: 'RS', label: 'Serbia', phone: '381' },\r\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\r\n  { code: 'RW', label: 'Rwanda', phone: '250' },\r\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\r\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\r\n  { code: 'SC', label: 'Seychelles', phone: '248' },\r\n  { code: 'SD', label: 'Sudan', phone: '249' },\r\n  { code: 'SE', label: 'Sweden', phone: '46' },\r\n  { code: 'SG', label: 'Singapore', phone: '65' },\r\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\r\n  { code: 'SI', label: 'Slovenia', phone: '386' },\r\n  { code: 'SJ', label: 'Svalbard and Jan Mayen', phone: '47' },\r\n  { code: 'SK', label: 'Slovakia', phone: '421' },\r\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\r\n  { code: 'SM', label: 'San Marino', phone: '378' },\r\n  { code: 'SN', label: 'Senegal', phone: '221' },\r\n  { code: 'SO', label: 'Somalia', phone: '252' },\r\n  { code: 'SR', label: 'Suriname', phone: '597' },\r\n  { code: 'SS', label: 'South Sudan', phone: '211' },\r\n  { code: 'ST', label: 'Sao Tome and Principe', phone: '239' },\r\n  { code: 'SV', label: 'El Salvador', phone: '503' },\r\n  { code: 'SX', label: 'Sint Maarten (Dutch part)', phone: '1-721' },\r\n  { code: 'SY', label: 'Syrian Arab Republic', phone: '963' },\r\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\r\n  { code: 'TC', label: 'Turks and Caicos Islands', phone: '1-649' },\r\n  { code: 'TD', label: 'Chad', phone: '235' },\r\n  { code: 'TF', label: 'French Southern Territories', phone: '262' },\r\n  { code: 'TG', label: 'Togo', phone: '228' },\r\n  { code: 'TH', label: 'Thailand', phone: '66' },\r\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\r\n  { code: 'TK', label: 'Tokelau', phone: '690' },\r\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\r\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\r\n  { code: 'TN', label: 'Tunisia', phone: '216' },\r\n  { code: 'TO', label: 'Tonga', phone: '676' },\r\n  { code: 'TR', label: 'Turkey', phone: '90' },\r\n  { code: 'TT', label: 'Trinidad and Tobago', phone: '1-868' },\r\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\r\n  { code: 'TW', label: 'Taiwan, Province of China', phone: '886' },\r\n  { code: 'TZ', label: 'United Republic of Tanzania', phone: '255' },\r\n  { code: 'UA', label: 'Ukraine', phone: '380' },\r\n  { code: 'UG', label: 'Uganda', phone: '256' },\r\n  { code: 'US', label: 'United States', phone: '1', suggested: true },\r\n  { code: 'UY', label: 'Uruguay', phone: '598' },\r\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\r\n  { code: 'VA', label: 'Holy See (Vatican City State)', phone: '379' },\r\n  { code: 'VC', label: 'Saint Vincent and the Grenadines', phone: '1-784' },\r\n  { code: 'VE', label: 'Venezuela', phone: '58' },\r\n  { code: 'VG', label: 'British Virgin Islands', phone: '1-284' },\r\n  { code: 'VI', label: 'US Virgin Islands', phone: '1-340' },\r\n  { code: 'VN', label: 'Vietnam', phone: '84' },\r\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\r\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\r\n  { code: 'WS', label: 'Samoa', phone: '685' },\r\n  { code: 'XK', label: 'Kosovo', phone: '383' },\r\n  { code: 'YE', label: 'Yemen', phone: '967' },\r\n  { code: 'YT', label: 'Mayotte', phone: '262' },\r\n  { code: 'ZA', label: 'South Africa', phone: '27' },\r\n  { code: 'ZM', label: 'Zambia', phone: '260' },\r\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\r\n];\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './TemperatureStripes.css';\r\n\r\nvar stripeCounter = 0;\r\n\r\nfunction getStripe(temp, numOfEntries) {\r\n     var hue = 200 + (160 * ( temp / 100 ));\r\n     var stripeWidth = 100 / numOfEntries;\r\n    console.log(stripeWidth)\r\n     var widthPercent = stripeWidth + '%';\r\n     console.log(widthPercent)\r\n     console.log(stripeCounter)\r\n     var moveLeft = stripeCounter * stripeWidth - 100;\r\n     console.log(moveLeft)\r\n     var leftPercent = moveLeft + '%';\r\n\r\n     console.log(leftPercent);\r\n     console.log(\"next\");\r\n     stripeCounter++;\r\n     return <div key={stripeCounter} className=\"stripe\" style={{\r\n                                               left: leftPercent,\r\n                                               width: widthPercent,\r\n                                               backgroundColor: `hsl(${hue}, 100%, 50%)`,\r\n                                             }}> </div>\r\n\r\n  }\r\n\r\nfunction TemperatureStripes() {\r\n  var temperatures = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\r\n  var length = temperatures.length;\r\n\r\n  return (\r\n\r\n    <div className=\"box\">\r\n        {temperatures.map((tmp)=>{\r\n            return getStripe(tmp, length)\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemperatureStripes;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: \"1796\"\r\n  },\r\n  {\r\n    value: 100,\r\n    label: \"2019\"\r\n  }\r\n];\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\nexport default function CustomSlider() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState([20, 37]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"range-slider\" gutterBottom>\r\n      </Typography>\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        marks={marks}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valuetext}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CustomizedSlider from './CustomizedSlider'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    textAlign: 'left'\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function OutlinedCard() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n            Country Name\r\n        </Typography>\r\n        <br/>\r\n        <CustomizedSlider/>\r\n        <br/>\r\n        <Typography className={classes.title} variant=\"body2\" component=\"p\">\r\n          Average Temperature \r\n        </Typography>\r\n        <br/>\r\n        <Typography className={classes.title} variant=\"body2\" component=\"p\">\r\n          Carbon Emissions\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\n// import ComboBox from './components/ComboBox.js';\r\nimport CountryBox from './components/CountryBox.js';\r\nimport StatesBox from './components/StatesBox.js';\r\nimport StarYearBox from './components/StartYearBox.js';\r\nimport EndYearBox from './components/EndYearBox.js';\r\n// import MapChart from './components/MapChart.js';\r\nimport Button from '@material-ui/core/Button';\r\n//import MapChart from './components/MapChart';\r\nimport CountrySelect from './components/CountrySelect.js';\r\nimport TemperatureStripes from './components/TemperatureStripes.js';\r\nimport OutlinedCard from './components/OutlinedCard';\r\n\r\n// const getData = async() =>\r\n//   await fetch(`/data/Colorado`)\r\n//   .then(res => (res.ok ? res : Promise.reject(res)))\r\n//   .then(res => res.json())\r\n\r\nfunction App() {\r\n  const [getMessage, setGetMessage] = useState({})\r\n\r\n  useEffect(()=>{\r\n    axios.get('https://significant-stats.herokuapp.com//flask/hello').then(response => {\r\n      console.log(\"SUCCESS\", response)\r\n      setGetMessage(response)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }, [])\r\n  const [stateName, setStateName] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [startYear, setStartYear] = useState('');\r\n  const [endYear, setEndYear] = useState('');\r\n  const [stateTempData, setStateTempData] = useState([]);\r\n  const [countryTempData, setCountryTempData] = useState([]);\r\n  const [countryYearlyTempData,setCountryYearlyTempData] = useState([]);\r\n  const [errorMessage,setErrorMessage] = useState('');\r\n  const [showCountryForm, setShowCountryForm] = useState(false);\r\n  const [showStateForm, setShowStateForm] = useState(false);\r\n  const temperature = 30;\r\n  let hue = 200 + (160 * ( temperature / 100 ));\r\n  console.log(hue)\r\n\r\n  const handleSubmitState = (evt) => {\r\n    evt.preventDefault();\r\n    if (stateName === '' || startYear === '' || endYear ===''){\r\n      alert(\"Please fill in all of the fields above.\");\r\n    }\r\n    else if (parseInt(startYear) < 1895 || parseInt(endYear) < 1895){\r\n      alert(\"U.S. State Data is only available from 1895 - 2019. Please change your selected starting/ending years.\")\r\n    }\r\n    else if (parseInt(startYear) > parseInt(endYear)){\r\n      alert(\"Your selected year range is invalid. Please try again.\")\r\n    }\r\n    else{\r\n      setCountryTempData([]);\r\n      setCountryYearlyTempData([]);\r\n      setErrorMessage('');\r\n      fetchDataState();\r\n    }\r\n\r\n  }\r\n\r\n  const handleSubmitCountry = (evt) => {\r\n    evt.preventDefault();\r\n    if (country=== '' || startYear === '' || endYear ===''){\r\n      alert(\"Please fill in all of the fields above.\");\r\n    }\r\n    else if (parseInt(startYear) > parseInt(endYear)){\r\n      alert(\"Your selected year range is invalid. Please try again.\")\r\n    }\r\n    else{\r\n      setStateTempData([]);\r\n      setErrorMessage('');\r\n      fetchDataCountry();\r\n    }\r\n\r\n  }\r\n\r\n  async function fetchDataState(){\r\n    const url = '/state_temp/'+stateName+'/'+startYear+'/'+endYear;\r\n    try{\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      if (!response.ok){\r\n        const error = (json && json.message) || response.statusText;\r\n        setErrorMessage(error);\r\n        return Promise.reject(error);\r\n      }\r\n      setStateTempData(json.result);\r\n\r\n    } catch (error){\r\n      setErrorMessage(error.toString());\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function fetchDataCountry(){\r\n    const year_url = '/country_start_year/'+country;\r\n    const year_response = await fetch(year_url);\r\n    const year_json = await year_response.json();\r\n    const min_year =year_json.result[0].year;\r\n    console.log(min_year);\r\n    if (min_year > parseInt(startYear)){\r\n      alert(\"Temperature data on \"+country+\" from \"+startYear+\" to \"+endYear+\" was not available in our database. Please try again with a starting year of at least \"+min_year+\" and an ending of at most 2013.\");\r\n      return;\r\n    }\r\n    const url = '/country_temp/'+country+'/'+startYear+'/'+endYear;\r\n    try{\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      if (!response.ok){\r\n        const error = (json && json.message) || response.statusText;\r\n        setErrorMessage(error);\r\n        return Promise.reject(error);\r\n      }\r\n        var temp = json.result;\r\n        temp.sort((a,b)=>parseInt(a.year) - parseInt(b.year));\r\n        setCountryTempData(temp);\r\n\r\n    } catch (error){\r\n      setErrorMessage(error.toString());\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    var curYear = parseInt(startYear);\r\n    var curTemp = 0;\r\n    var yearlyTemps = [];\r\n    if (countryTempData.length > 0){\r\n      countryTempData.forEach(function(item){\r\n        if (item.year===curYear){\r\n          curTemp+=item.average_temp;\r\n        }\r\n        else{\r\n          var avgTemp = curTemp/12;\r\n          yearlyTemps.push({\r\n            'average_temp':avgTemp,\r\n            'country':item.country,\r\n            'year':curYear\r\n          });\r\n          curTemp = item.average_temp;\r\n          curYear = item.year;\r\n        }\r\n      })\r\n      var avgTemp = curTemp/12;\r\n      yearlyTemps.push({\r\n        'average_temp':avgTemp,\r\n        'country':country,\r\n        'year':curYear\r\n      });\r\n      console.log(yearlyTemps);\r\n      updateCountryYearly(yearlyTemps);\r\n      console.log(countryYearlyTempData);\r\n    }\r\n  },[countryTempData]);\r\n\r\n  function updateCountryYearly(newData){\r\n    setCountryYearlyTempData(newData);\r\n    console.log(countryYearlyTempData);\r\n  }\r\n\r\n  function handleCountryChange(newValue) {\r\n    setCountry(newValue);\r\n  }\r\n\r\n  function handleStateChange(newValue) {\r\n    setStateName(newValue);\r\n  }\r\n\r\n  function handleStartYearChange(newValue) {\r\n    setStartYear(newValue);\r\n  }\r\n\r\n  function handleEndYearChange(newValue) {\r\n    setEndYear(newValue);\r\n  }\r\n\r\n  function changeStateForm(){\r\n    setShowCountryForm(false);\r\n    setShowStateForm(true);\r\n    console.log(showStateForm,showCountryForm);\r\n  }\r\n\r\n  function changeCountryForm(){\r\n    setShowCountryForm(true);\r\n    setShowStateForm(false);\r\n    console.log(showStateForm,showCountryForm);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{\r\n          position: 'absolute', left: '50%', top: '15%',\r\n          transform: 'translate(-50%, -50%)'\r\n        }}>\r\n          {/* <CountrySelect/> */}\r\n          <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={changeStateForm}>Show State Form</Button>\r\n        </div>\r\n        <br/>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={changeCountryForm}>Show Country Form</Button>\r\n        </div>\r\n        <br></br>\r\n        {showStateForm ? <div>\r\n          <StatesBox onChange={handleStateChange}/>\r\n          <StarYearBox value={startYear} onChange={handleStartYearChange}/>\r\n          <EndYearBox value={endYear} onChange={handleEndYearChange}/>\r\n          <form onSubmit={handleSubmitState}>\r\n          <Button type=\"submit\" value=\"Submit\" variant=\"contained\" color=\"primary\">Submit</Button>\r\n          </form>\r\n        </div>: null}\r\n        {showCountryForm ? <div>\r\n          <CountryBox value={country} onChange={handleCountryChange}/>\r\n          <StarYearBox value={startYear} onChange={handleStartYearChange}/>\r\n          <EndYearBox value={endYear} onChange={handleEndYearChange}/>\r\n           <form onSubmit={handleSubmitCountry}>\r\n          <Button type=\"submit\" value=\"Submit\" variant=\"contained\" color=\"primary\">Submit</Button>\r\n          </form>\r\n        </div> :null}\r\n\r\n    <ul>\r\n          {stateTempData.map(row => (\r\n            <li>\r\n              {row.state}, Average Temp: {row.average_temp}, Year: {row.year}\r\n            </li>\r\n          ))}\r\n          {countryTempData.map(row => (\r\n            <li>\r\n              {row.country}, Average Temp: {row.average_temp}, Year: {row.year}, Month {row.month}\r\n            </li>\r\n          ))}\r\n          <hr></hr>\r\n          {countryYearlyTempData.map(row => (\r\n            <li>\r\n              {row.country}, Average Yearly Temp: {row.average_temp}, Year: {row.year}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p>{errorMessage}</p>\r\n        </div>\r\n        <TemperatureStripes/>\r\n        <div style={{ position: 'absolute', left: '80%', top: '48%', transform: 'translate(-50%, -50%)'}}>\r\n          <OutlinedCard/>\r\n        </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}